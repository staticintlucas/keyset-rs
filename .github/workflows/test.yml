name: Test

on: [push, pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files
      - name: Run cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v1

  test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, 1.60.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
        env:
          RUSTFLAGS: -D warnings
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all

  coverage:
    name: Test coverage
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: llvm-tools
      - name: Setup grcov
        uses: actions-rs/install@v0.1
        with:
          crate: grcov
          use-tool-cache: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib
        env:
          RUSTFLAGS: -Cinstrument-coverage
          LLVM_PROFILE_FILE: keyset-rs-%p-%m.profraw
      - name: Run grcov
        run: >-
          grcov .
          --source-dir .
          --binary-path ./target/debug/
          --output-type lcov
          --branch
          --llvm
          --ignore-not-existing
          --output-path ./lcov.info
          --ignore '/*'
          --excl-line '^\s*(#\[derive\([\w, ]*\)\]|unreachable!\(\);?)$'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          file: lcov.info
